services:
  build-base:
    image: hal-thesis/multi-services-base
    build:
      context: services/multi
      dockerfile: Dockerfile.base
    container_name: pre-build

  service-01:
    depends_on:
      build-base:
        condition: service_completed_successfully
    image: service-01
    container_name: service-01
    build:
      context: services
      dockerfile: multi/Dockerfile.01
    ports:
      - "9100:5000"
    networks:
      - services
    command: flask --app app run --host=0.0.0.0 --port=5000

  service-02:
    depends_on:
      build-base:
        condition: service_completed_successfully
    image: service-02
    container_name: service-02
    build:
      context: services
      dockerfile: multi/Dockerfile.02
    ports:
      - "9101:5000"
    networks:
      - services
    command: flask --app app run --host=0.0.0.0 --port=5000

  service-03:
    depends_on:
      build-base:
        condition: service_completed_successfully
    image: service-03
    container_name: service-03
    build:
      context: services
      dockerfile: multi/Dockerfile.03
    ports:
      - "9102:5000"
    networks:
      - services
    command: flask --app app run --host=0.0.0.0 --port=5000

  service-single:
    image: service-single
    build:
      context: services/single
    container_name: service-single
    ports:
      - "9103:5000"
    networks:
      - services
    command: flask --app app run --host=0.0.0.0 --port=5000

  service-looper:
    build:
      context: services
      dockerfile: looper/Dockerfile
    image: service-looper
    container_name: service-looper
    ports:
      - "9104:5000"
    networks:
      - services

networks:
  services:
    name: thesis
    external: true